A transaction is a single logical unit of work that accesses and possibly modifies the contents of a database. Transactions access data using read and write operations. 
In order to maintain consistency in a database, before and after the transaction, certain properties are followed. These are called ACID properties

Atomicity (A):
Atomicity ensures that a transaction is treated as a single, indivisible unit of work.
Either all the changes made by the transaction are committed to the database, or none of them are. There is no partial execution.

Consistency (C):
This means that integrity constraints must be maintained so that the database is consistent before and after the transaction. 
It refers to the correctness of a database. 
Consistency ensures that a transaction brings the database from one valid state to another.
The database must satisfy a set of integrity constraints before and after the transaction.

Isolation (I):
Isolation ensures that the execution of one transaction is isolated from the execution of other transactions.
Transactions occur independently without interference.

Durability (D):
Durability guarantees that once a transaction is committed, its effects are permanent.
The changes made by the transaction will persist, even in the event of a system crash or power loss.